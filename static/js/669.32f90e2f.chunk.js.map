{"version":3,"file":"static/js/669.32f90e2f.chunk.js","mappings":"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","sources":["components/Form/styled.js","redux/contacts/selectors.js","components/Form/Form.jsx","redux/filter/selectors.js","components/Contact/styled.js","components/Contact/Contact.jsx","components/ContactList/styled.js","components/ContactList/ContactList.jsx","components/Filter/styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactsForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  font-size: 25px;\n  font-weight: 500;\n`;\n\nexport const FormText = styled.input`\n  display: inline-block;\n  padding: 10px 10px;\n  font-size: 20px;\n  font-weight: 800;\n  background-color: transparent;\n  border: 1px solid black;\n  cursor: pointer;\n`;\n\nexport const SubmitButton = styled.button`\n  display: inline-block;\n  width: 100%;\n  padding: 10px 10px;\n  font-size: 20px;\n  font-weight: 800;\n  background-color: transparent;\n  border: 1px solid black;\n  cursor: pointer;\n`;\n","export const getContacts = state => state.contacts.contacts;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","import { useDispatch } from 'react-redux';\nimport { ContactsForm, FormLabel, FormText, SubmitButton } from './styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\n\nexport function Form() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    const isDuplicateName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isDuplicateName) {\n      alert('Contact already exists');\n      form.elements.name.value = '';\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <ContactsForm onSubmit={handleFormSubmit}>\n      <FormLabel>\n        Name\n        <FormText\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        Number\n        <FormText\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <SubmitButton type=\"submit\">Add contact</SubmitButton>\n    </ContactsForm>\n  );\n}\n","export const getFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  width: 100%;\n  padding: 10px 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 30px;\n  border: 1px solid black;\n`;\n\nexport const Text = styled.p`\n  margin: 0px 0px;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  padding: 10px 10px;\n  font-size: 20px;\n  font-weight: 800;\n  background-color: transparent;\n  border: 1px solid black;\n  cursor: pointer;\n`;\n","import { ContactItem, Text, Button } from './styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const Contact = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <ContactItem>\n      <Text>\n        {name}: {number}\n      </Text>\n      <Button type=\"button\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </ContactItem>\n  );\n};\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n}.isRequired;\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: 30px;\n  padding: 0px 0px;\n  list-style: none;\n`;\n","import { getContacts } from 'redux/contacts/selectors';\nimport { getFilter } from 'redux/filter/selectors';\nimport { Contact } from 'components/Contact';\nimport { ContactsList } from './styled';\nimport { useSelector } from 'react-redux';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filterValue = useSelector(getFilter);\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue.toLowerCase())\n  );\n\n  return (\n    <ContactsList>\n      {visibleContacts.map(({ name, number, id }) => (\n        <Contact name={name} number={number} id={id} key={id} />\n      ))}\n    </ContactsList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n  font-size: 25px;\n  font-weight: 500;\n`;\n\nexport const Text = styled.input`\n  display: inline-block;\n  padding: 10px 10px;\n  font-size: 20px;\n  font-weight: 800;\n  background-color: transparent;\n  border: 1px solid black;\n`;\n","import React from 'react';\nimport { Label, Text } from './styled';\nimport { useDispatch } from 'react-redux';\nimport { handleFilter } from 'redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilterChange = event => {\n    const inputValue = event.currentTarget.value;\n    dispatch(handleFilter(inputValue));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Text type=\"text\" onChange={handleFilterChange} />\n    </Label>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form } from 'components/Form';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getError, getIsLoading } from 'redux/contacts/selectors';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101',\n      }}\n    >\n      <h1\n        style={{\n          fontSize: '35px',\n          fontWeight: 800,\n          marginTop: '0px',\n          marginBottom: '30px',\n        }}\n      >\n        Phonebook\n      </h1>\n      <Form />\n      <h2\n        style={{\n          fontSize: '35px',\n          fontWeight: 800,\n          marginTop: '30px',\n        }}\n      >\n        Contacts\n      </h2>\n      <Filter />\n      {isLoading && !error && <b>Loading...</b>}\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["ContactsForm","styled","FormLabel","FormText","SubmitButton","getContacts","state","contacts","getIsLoading","isLoading","getError","error","Form","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","form","target","name","elements","value","number","some","contact","toLowerCase","alert","addContact","reset","type","pattern","title","required","getFilter","filter","ContactItem","Text","Button","Contact","id","onClick","deleteContact","ContactsList","ContactList","filterValue","visibleContacts","includes","map","Label","Filter","onChange","inputValue","currentTarget","handleFilter","Tasks","useEffect","fetchContacts","style","height","display","flexDirection","justifyContent","alignItems","fontSize","color","fontWeight","marginTop","marginBottom"],"sourceRoot":""}