{"version":3,"file":"static/js/317.726d4bb6.chunk.js","mappings":"mOAEaA,EAAOC,EAAAA,GAAAA,KAAH,2HAQJC,EAAQD,EAAAA,GAAAA,MAAH,qEAKLE,EAAQF,EAAAA,GAAAA,MAAH,4IASLG,EAASH,EAAAA,GAAAA,OAAH,6N,kBCnBNI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAgCjB,OACE,UAACP,EAAD,CAAMQ,SA/Ba,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACyB,KAApCD,EAAKE,SAASC,KAAKC,MAAMC,OAIY,KAArCL,EAAKE,SAASI,MAAMF,MAAMC,OAKc,KAAxCL,EAAKE,SAASK,SAASH,MAAMC,QAIjCV,GACEa,EAAAA,EAAAA,IAAS,CACPL,KAAMH,EAAKE,SAASC,KAAKC,MACzBE,MAAON,EAAKE,SAASI,MAAMF,MAC3BG,SAAUP,EAAKE,SAASK,SAASH,SAGrCJ,EAAKS,QAELC,EAAAA,OAAAA,QACE,+DAbAA,EAAAA,OAAAA,QAAe,mDALfA,EAAAA,OAAAA,QAAe,gDAJfA,EAAAA,OAAAA,QAAe,8CAwBlB,EAGC,WACE,UAACnB,EAAD,WAAO,YAEL,SAACC,EAAD,CAAOmB,KAAK,OAAOR,KAAK,aAE1B,UAACZ,EAAD,WAAO,SAEL,SAACC,EAAD,CAAOmB,KAAK,QAAQR,KAAK,cAE3B,UAACZ,EAAD,WAAO,YAEL,SAACC,EAAD,CAAOmB,KAAK,WAAWR,KAAK,iBAE9B,SAACV,EAAD,CAAQkB,KAAK,SAAb,SAAsB,eAG3B,ECrDc,SAASC,IACtB,OACE,0BACE,SAAClB,EAAD,KAGL,C","sources":["components/RegisterForm/styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  max-width: 300px;\n  margin: 0 auto;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  &:hover {\n    border-color: #e63900;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 0.5rem;\n  background-color: #808080;\n  color: #fff;\n  border: none;\n  font-weight: 600;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    background-color: #ff4500;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Form, Label, Input, Button } from './styled';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (form.elements.name.value.trim() === '') {\n      Notify.warning('Name field cannot be empty. Please, fill in');\n      return;\n    }\n    if (form.elements.email.value.trim() === '') {\n      Notify.warning('Email field cannot be empty. Please, fill in');\n      return;\n    }\n\n    if (form.elements.password.value.trim() === '') {\n      Notify.warning('Password field cannot be empty. Please, fill in');\n      return;\n    }\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n\n    Notify.success(\n      'Successful registration. Welcome to your personal account!'\n    );\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Username\n        <Input type=\"text\" name=\"name\" />\n      </Label>\n      <Label>\n        Email\n        <Input type=\"email\" name=\"email\" />\n      </Label>\n      <Label>\n        Password\n        <Input type=\"password\" name=\"password\" />\n      </Label>\n      <Button type=\"submit\">Register</Button>\n    </Form>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["Form","styled","Label","Input","Button","RegisterForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","elements","name","value","trim","email","password","register","reset","Notify","type","Login"],"sourceRoot":""}